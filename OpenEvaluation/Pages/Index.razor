@page "/"
@using System.Security.Claims
@using System.Text.RegularExpressions
@using Microsoft.Extensions.Hosting
@using Microsoft.Extensions.WebEncoders.Testing
@using OpenEvaluation.Helpers

<AuthorizeView>
    <NotAuthorized>
        <Login></Login>
    </NotAuthorized>
    <Authorized>
        <h2>Welcome, @name</h2>

        <table class="table">
            <tr>
                <th>UserId</th>
                <td>@userId</td>
            </tr>
            <tr>
                <th>Password</th>
                <td><a href="password">Change Password</a></td>
            </tr>
            <tr>
                <th>Role</th>
                <td>@role</td>
            </tr>
        </table>
    </Authorized>
</AuthorizeView>
    

    



@code
{
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    ClaimsPrincipal userc;

    string name, userId, role;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (userc?.Identity.IsAuthenticated == true)
        {
            return;
        }
        userc = (await authenticationStateTask).User;
        if (userc.Identity.IsAuthenticated)
        {
            name = userc.Identity.Name;
            userId = userc.FindFirst("UserId").Value;
            role = userc.FindFirst(ClaimTypes.Role).Value;
            StateHasChanged();
        }
        await base.OnAfterRenderAsync(firstRender);
    }
}
